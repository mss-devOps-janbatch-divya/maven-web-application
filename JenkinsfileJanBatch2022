def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
node{
 
 def mavenHome = tool name: "maven3.8.5"
 buildName 'Dev - ${Build_Number}'
 buildDescription 'pipelinescript-scriptedway'
 echo "The branch name  name is: ${env.BRANCH_NAME}"
 echo "The build number is: ${env.BUILD_NUMBER}"
 echo "The node name is: ${env.NODE_NAME}"
 echo "The job url is: ${env.JOB_URL}"

try{
//Checkout stage
stage('checkoutcode'){
git branch: 'development', credentialsId: '78dc46fd-91ef-4747-9a53-3f2dccf54e12', url:
'https://github.com/mss-devOps-janbatch-divya/maven-web-application.git'
}

   
//Build stage
stage('Build'){
sh"$mavenHome/bin/mvn clean package"
}

//Generate SonarQube Report
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//Upload Artifacts into Artifacts repo
stage ('UploadArtfactsintoNexus'){
sh "$mavenHome/bin/mvn deploy"
}

//Deploy APP into Tomcat Server
stage ('Deploy Tomcat nto Tomcat'){
sshagent(['384d90a5-8011-4729-b70a-5ec044688fa5']) {
sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.187.46:/opt/apache-tomcat-9.0.59/webapps"   
}
}
}//Try block closing
catch(e) {
currentBuild.result="FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}


}//Node closing
